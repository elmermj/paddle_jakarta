// Mocks generated by Mockito 5.4.4 from annotations
// in paddle_jakarta/test/viewmodels/home_viewmodel_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i2;
import 'package:geolocator_platform_interface/src/enums/enums.dart' as _i9;
import 'package:geolocator_platform_interface/src/geolocator_platform_interface.dart'
    as _i8;
import 'package:geolocator_platform_interface/src/models/models.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:paddle_jakarta/data/models/timeline_item_model.dart' as _i6;
import 'package:paddle_jakarta/domain/repository/timeline_repository.dart'
    as _i4;
import 'package:paddle_jakarta/domain/repository/user_repository.dart' as _i7;
import 'package:paddle_jakarta/services/permission_service.dart' as _i10;
import 'package:permission_handler/permission_handler.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePosition_1 extends _i1.SmartFake implements _i3.Position {
  _FakePosition_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TimelineRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimelineRepository extends _i1.Mock
    implements _i4.TimelineRepository {
  @override
  _i5.Future<_i2.Either<Exception, void>> saveTimelineItem(
          _i6.TimelineItemModel? timelineItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTimelineItem,
          [timelineItem],
        ),
        returnValue: _i5.Future<_i2.Either<Exception, void>>.value(
            _FakeEither_0<Exception, void>(
          this,
          Invocation.method(
            #saveTimelineItem,
            [timelineItem],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Either<Exception, void>>.value(
                _FakeEither_0<Exception, void>(
          this,
          Invocation.method(
            #saveTimelineItem,
            [timelineItem],
          ),
        )),
      ) as _i5.Future<_i2.Either<Exception, void>>);

  @override
  _i5.Future<
      _i2.Either<Exception, List<_i6.TimelineItemModel>>> getMyTimelineItems(
          int? limit) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMyTimelineItems,
          [limit],
        ),
        returnValue: _i5
            .Future<_i2.Either<Exception, List<_i6.TimelineItemModel>>>.value(
            _FakeEither_0<Exception, List<_i6.TimelineItemModel>>(
          this,
          Invocation.method(
            #getMyTimelineItems,
            [limit],
          ),
        )),
        returnValueForMissingStub: _i5
            .Future<_i2.Either<Exception, List<_i6.TimelineItemModel>>>.value(
            _FakeEither_0<Exception, List<_i6.TimelineItemModel>>(
          this,
          Invocation.method(
            #getMyTimelineItems,
            [limit],
          ),
        )),
      ) as _i5.Future<_i2.Either<Exception, List<_i6.TimelineItemModel>>>);

  @override
  _i5.Future<
      _i2.Either<Exception, List<_i6.TimelineItemModel>>> loadMoreTimelineItems(
    int? limit,
    String? timelineItemId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadMoreTimelineItems,
          [
            limit,
            timelineItemId,
          ],
        ),
        returnValue: _i5
            .Future<_i2.Either<Exception, List<_i6.TimelineItemModel>>>.value(
            _FakeEither_0<Exception, List<_i6.TimelineItemModel>>(
          this,
          Invocation.method(
            #loadMoreTimelineItems,
            [
              limit,
              timelineItemId,
            ],
          ),
        )),
        returnValueForMissingStub: _i5
            .Future<_i2.Either<Exception, List<_i6.TimelineItemModel>>>.value(
            _FakeEither_0<Exception, List<_i6.TimelineItemModel>>(
          this,
          Invocation.method(
            #loadMoreTimelineItems,
            [
              limit,
              timelineItemId,
            ],
          ),
        )),
      ) as _i5.Future<_i2.Either<Exception, List<_i6.TimelineItemModel>>>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i7.UserRepository {
  @override
  _i5.Future<_i2.Either<String, _i2.Unit>> loginEmail(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginEmail,
          [
            email,
            password,
          ],
        ),
        returnValue: _i5.Future<_i2.Either<String, _i2.Unit>>.value(
            _FakeEither_0<String, _i2.Unit>(
          this,
          Invocation.method(
            #loginEmail,
            [
              email,
              password,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Either<String, _i2.Unit>>.value(
                _FakeEither_0<String, _i2.Unit>(
          this,
          Invocation.method(
            #loginEmail,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i5.Future<_i2.Either<String, _i2.Unit>>);

  @override
  _i5.Future<_i2.Either<String, _i2.Unit>> loginGoogle() => (super.noSuchMethod(
        Invocation.method(
          #loginGoogle,
          [],
        ),
        returnValue: _i5.Future<_i2.Either<String, _i2.Unit>>.value(
            _FakeEither_0<String, _i2.Unit>(
          this,
          Invocation.method(
            #loginGoogle,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Either<String, _i2.Unit>>.value(
                _FakeEither_0<String, _i2.Unit>(
          this,
          Invocation.method(
            #loginGoogle,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<String, _i2.Unit>>);

  @override
  _i5.Future<_i2.Either<String, _i2.Unit>> registerEmail(
    String? email,
    String? password,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerEmail,
          [
            email,
            password,
            name,
          ],
        ),
        returnValue: _i5.Future<_i2.Either<String, _i2.Unit>>.value(
            _FakeEither_0<String, _i2.Unit>(
          this,
          Invocation.method(
            #registerEmail,
            [
              email,
              password,
              name,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Either<String, _i2.Unit>>.value(
                _FakeEither_0<String, _i2.Unit>(
          this,
          Invocation.method(
            #registerEmail,
            [
              email,
              password,
              name,
            ],
          ),
        )),
      ) as _i5.Future<_i2.Either<String, _i2.Unit>>);

  @override
  _i5.Future<_i2.Either<String, _i2.Unit>> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i5.Future<_i2.Either<String, _i2.Unit>>.value(
            _FakeEither_0<String, _i2.Unit>(
          this,
          Invocation.method(
            #logout,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Either<String, _i2.Unit>>.value(
                _FakeEither_0<String, _i2.Unit>(
          this,
          Invocation.method(
            #logout,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<String, _i2.Unit>>);

  @override
  _i5.Future<_i2.Either<String, _i2.Unit>> deleteAccount() =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAccount,
          [],
        ),
        returnValue: _i5.Future<_i2.Either<String, _i2.Unit>>.value(
            _FakeEither_0<String, _i2.Unit>(
          this,
          Invocation.method(
            #deleteAccount,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Either<String, _i2.Unit>>.value(
                _FakeEither_0<String, _i2.Unit>(
          this,
          Invocation.method(
            #deleteAccount,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<String, _i2.Unit>>);

  @override
  _i5.Future<_i2.Either<String, _i2.Unit>> forgotPassword(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgotPassword,
          [email],
        ),
        returnValue: _i5.Future<_i2.Either<String, _i2.Unit>>.value(
            _FakeEither_0<String, _i2.Unit>(
          this,
          Invocation.method(
            #forgotPassword,
            [email],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Either<String, _i2.Unit>>.value(
                _FakeEither_0<String, _i2.Unit>(
          this,
          Invocation.method(
            #forgotPassword,
            [email],
          ),
        )),
      ) as _i5.Future<_i2.Either<String, _i2.Unit>>);
}

/// A class which mocks [GeolocatorPlatform].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeolocatorPlatform extends _i1.Mock
    implements _i8.GeolocatorPlatform {
  @override
  _i5.Future<_i9.LocationPermission> checkPermission() => (super.noSuchMethod(
        Invocation.method(
          #checkPermission,
          [],
        ),
        returnValue: _i5.Future<_i9.LocationPermission>.value(
            _i9.LocationPermission.denied),
        returnValueForMissingStub: _i5.Future<_i9.LocationPermission>.value(
            _i9.LocationPermission.denied),
      ) as _i5.Future<_i9.LocationPermission>);

  @override
  _i5.Future<_i9.LocationPermission> requestPermission() => (super.noSuchMethod(
        Invocation.method(
          #requestPermission,
          [],
        ),
        returnValue: _i5.Future<_i9.LocationPermission>.value(
            _i9.LocationPermission.denied),
        returnValueForMissingStub: _i5.Future<_i9.LocationPermission>.value(
            _i9.LocationPermission.denied),
      ) as _i5.Future<_i9.LocationPermission>);

  @override
  _i5.Future<bool> isLocationServiceEnabled() => (super.noSuchMethod(
        Invocation.method(
          #isLocationServiceEnabled,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<_i3.Position?> getLastKnownPosition(
          {bool? forceLocationManager = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLastKnownPosition,
          [],
          {#forceLocationManager: forceLocationManager},
        ),
        returnValue: _i5.Future<_i3.Position?>.value(),
        returnValueForMissingStub: _i5.Future<_i3.Position?>.value(),
      ) as _i5.Future<_i3.Position?>);

  @override
  _i5.Future<_i3.Position> getCurrentPosition(
          {_i3.LocationSettings? locationSettings}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentPosition,
          [],
          {#locationSettings: locationSettings},
        ),
        returnValue: _i5.Future<_i3.Position>.value(_FakePosition_1(
          this,
          Invocation.method(
            #getCurrentPosition,
            [],
            {#locationSettings: locationSettings},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Position>.value(_FakePosition_1(
          this,
          Invocation.method(
            #getCurrentPosition,
            [],
            {#locationSettings: locationSettings},
          ),
        )),
      ) as _i5.Future<_i3.Position>);

  @override
  _i5.Stream<_i9.ServiceStatus> getServiceStatusStream() => (super.noSuchMethod(
        Invocation.method(
          #getServiceStatusStream,
          [],
        ),
        returnValue: _i5.Stream<_i9.ServiceStatus>.empty(),
        returnValueForMissingStub: _i5.Stream<_i9.ServiceStatus>.empty(),
      ) as _i5.Stream<_i9.ServiceStatus>);

  @override
  _i5.Stream<_i3.Position> getPositionStream(
          {_i3.LocationSettings? locationSettings}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPositionStream,
          [],
          {#locationSettings: locationSettings},
        ),
        returnValue: _i5.Stream<_i3.Position>.empty(),
        returnValueForMissingStub: _i5.Stream<_i3.Position>.empty(),
      ) as _i5.Stream<_i3.Position>);

  @override
  _i5.Future<_i9.LocationAccuracyStatus> requestTemporaryFullAccuracy(
          {required String? purposeKey}) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestTemporaryFullAccuracy,
          [],
          {#purposeKey: purposeKey},
        ),
        returnValue: _i5.Future<_i9.LocationAccuracyStatus>.value(
            _i9.LocationAccuracyStatus.reduced),
        returnValueForMissingStub: _i5.Future<_i9.LocationAccuracyStatus>.value(
            _i9.LocationAccuracyStatus.reduced),
      ) as _i5.Future<_i9.LocationAccuracyStatus>);

  @override
  _i5.Future<_i9.LocationAccuracyStatus> getLocationAccuracy() =>
      (super.noSuchMethod(
        Invocation.method(
          #getLocationAccuracy,
          [],
        ),
        returnValue: _i5.Future<_i9.LocationAccuracyStatus>.value(
            _i9.LocationAccuracyStatus.reduced),
        returnValueForMissingStub: _i5.Future<_i9.LocationAccuracyStatus>.value(
            _i9.LocationAccuracyStatus.reduced),
      ) as _i5.Future<_i9.LocationAccuracyStatus>);

  @override
  _i5.Future<bool> openAppSettings() => (super.noSuchMethod(
        Invocation.method(
          #openAppSettings,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> openLocationSettings() => (super.noSuchMethod(
        Invocation.method(
          #openLocationSettings,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  double distanceBetween(
    double? startLatitude,
    double? startLongitude,
    double? endLatitude,
    double? endLongitude,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #distanceBetween,
          [
            startLatitude,
            startLongitude,
            endLatitude,
            endLongitude,
          ],
        ),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double bearingBetween(
    double? startLatitude,
    double? startLongitude,
    double? endLatitude,
    double? endLongitude,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #bearingBetween,
          [
            startLatitude,
            startLongitude,
            endLatitude,
            endLongitude,
          ],
        ),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);
}

/// A class which mocks [PermissionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPermissionService extends _i1.Mock implements _i10.PermissionService {
  @override
  _i5.Future<_i11.PermissionStatus> checkLocationPermission() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkLocationPermission,
          [],
        ),
        returnValue: _i5.Future<_i11.PermissionStatus>.value(
            _i11.PermissionStatus.denied),
        returnValueForMissingStub: _i5.Future<_i11.PermissionStatus>.value(
            _i11.PermissionStatus.denied),
      ) as _i5.Future<_i11.PermissionStatus>);

  @override
  _i5.Future<_i11.PermissionStatus> requestLocationPermission() =>
      (super.noSuchMethod(
        Invocation.method(
          #requestLocationPermission,
          [],
        ),
        returnValue: _i5.Future<_i11.PermissionStatus>.value(
            _i11.PermissionStatus.denied),
        returnValueForMissingStub: _i5.Future<_i11.PermissionStatus>.value(
            _i11.PermissionStatus.denied),
      ) as _i5.Future<_i11.PermissionStatus>);
}
